// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaOrderingAPI.Models;

namespace PizzaOrderingAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190724125942_3")]
    partial class _3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.CheeseAmount", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount");

                    b.Property<double>("Price");

                    b.HasKey("id");

                    b.ToTable("CheeseAmount");
                });

            modelBuilder.Entity("Entities.Crust", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CrustName");

                    b.Property<double>("Price");

                    b.HasKey("id");

                    b.ToTable("Crust");
                });

            modelBuilder.Entity("Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Firstname");

                    b.Property<string>("Lastname");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNo");

                    b.Property<string>("State");

                    b.Property<string>("Username");

                    b.Property<string>("Zip");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId");

                    b.Property<bool>("IsDelivered");

                    b.Property<DateTime>("OrderDate");

                    b.Property<double>("Price");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Entities.Payment", b =>
                {
                    b.Property<string>("CardNo")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("CVV");

                    b.Property<int?>("CustomerId");

                    b.Property<string>("ExpirationDate");

                    b.HasKey("CardNo");

                    b.HasIndex("CustomerId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Entities.Pizza", b =>
                {
                    b.Property<int>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CheeseAmountid");

                    b.Property<int?>("Crustid");

                    b.Property<int?>("OrderId");

                    b.Property<double>("Price");

                    b.Property<int?>("SauceAmountid");

                    b.Property<int?>("Sauceid");

                    b.Property<int?>("Sizeid");

                    b.Property<int?>("Topping1");

                    b.Property<int?>("Topping2");

                    b.Property<int?>("Topping3");

                    b.Property<int?>("Topping4");

                    b.Property<int?>("Topping5");

                    b.Property<int>("ToppingCount");

                    b.HasKey("PizzaId");

                    b.HasIndex("CheeseAmountid");

                    b.HasIndex("Crustid");

                    b.HasIndex("OrderId");

                    b.HasIndex("SauceAmountid");

                    b.HasIndex("Sauceid");

                    b.HasIndex("Sizeid");

                    b.ToTable("Pizza");
                });

            modelBuilder.Entity("Entities.Sauce", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Price");

                    b.Property<string>("SauceName");

                    b.HasKey("id");

                    b.ToTable("Sauce");
                });

            modelBuilder.Entity("Entities.SauceAmount", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount");

                    b.Property<double>("Price");

                    b.HasKey("id");

                    b.ToTable("SauceAmount");
                });

            modelBuilder.Entity("Entities.Size", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Price");

                    b.Property<string>("SizeName");

                    b.HasKey("id");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("Entities.Toppping", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ToppingName");

                    b.Property<double>("ToppingPrice");

                    b.HasKey("id");

                    b.ToTable("Topping");
                });

            modelBuilder.Entity("Entities.Order", b =>
                {
                    b.HasOne("Entities.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("Entities.Payment", b =>
                {
                    b.HasOne("Entities.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("Entities.Pizza", b =>
                {
                    b.HasOne("Entities.CheeseAmount", "CheeseAmount")
                        .WithMany()
                        .HasForeignKey("CheeseAmountid");

                    b.HasOne("Entities.Crust", "Crust")
                        .WithMany()
                        .HasForeignKey("Crustid");

                    b.HasOne("Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("Entities.SauceAmount", "SauceAmount")
                        .WithMany()
                        .HasForeignKey("SauceAmountid");

                    b.HasOne("Entities.Sauce", "Sauce")
                        .WithMany()
                        .HasForeignKey("Sauceid");

                    b.HasOne("Entities.Size", "Size")
                        .WithMany()
                        .HasForeignKey("Sizeid");
                });
#pragma warning restore 612, 618
        }
    }
}
