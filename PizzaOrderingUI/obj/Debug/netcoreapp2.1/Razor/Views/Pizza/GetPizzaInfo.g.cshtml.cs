#pragma checksum "C:\Users\z8410\Desktop\copyPizzaOrderingAPI\PizzaOrderingAPI\PizzaOrderingUI\Views\Pizza\GetPizzaInfo.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6b76df11ae44ba37b13bc0244c5584fab2ef9178"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Pizza_GetPizzaInfo), @"mvc.1.0.view", @"/Views/Pizza/GetPizzaInfo.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Pizza/GetPizzaInfo.cshtml", typeof(AspNetCore.Views_Pizza_GetPizzaInfo))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\z8410\Desktop\copyPizzaOrderingAPI\PizzaOrderingAPI\PizzaOrderingUI\Views\_ViewImports.cshtml"
using PizzaOrderingUI;

#line default
#line hidden
#line 2 "C:\Users\z8410\Desktop\copyPizzaOrderingAPI\PizzaOrderingAPI\PizzaOrderingUI\Views\_ViewImports.cshtml"
using PizzaOrderingUI.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6b76df11ae44ba37b13bc0244c5584fab2ef9178", @"/Views/Pizza/GetPizzaInfo.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9f1b0c13287050f31df2b1eb1b9674d70f33aae7", @"/Views/_ViewImports.cshtml")]
    public class Views_Pizza_GetPizzaInfo : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Entities.ViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("toppingList"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "C:\Users\z8410\Desktop\copyPizzaOrderingAPI\PizzaOrderingAPI\PizzaOrderingUI\Views\Pizza\GetPizzaInfo.cshtml"
  
    ViewData["Title"] = "GetPizzaInfo";

#line default
#line hidden
            BeginContext(75, 439, true);
            WriteLiteral(@"
<h2>Create Pizza</h2>

<div class=""container"">
    <table border=""0"" width=""100%"" height=""10%"">
        <tr>
            <td width=""13%"" align=""center"" bgcolor=""dodgerblue""><font color=""white""><b>Size</b></font></td>
        </tr>

    </table>
    <br />

 </div>

    <div class=""container"">
        <div class=""row"">
            <div class=""col-sm-6"">

                <div class=""form-group"">

                    ");
            EndContext();
            BeginContext(514, 30, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b2f387414a9e472ba85c0d1f3f9e6df8", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(544, 5512, true);
            WriteLiteral(@"

                    <div id=""shoppingcart""></div>


                </div>
                <div>
                    <button class=""btn btn-default"" id=""addPizza"">Add Pizza</button>
                </div>

            </div>

        </div>
    </div>

    <script>
        var totalPrice = 0;
        $(document).ready(function (e) {
            var url = ""http://localhost:54241/api/Pizzas/""
            //change to your url, same for other view.
            $.ajax({
                contentType: 'application/json',
                type: ""GET"",
                url: url,
                success: function (data, textStatus, jqXHR) {


                    var Id = 0;
                    //Size

                    $(""#toppingList"").append(`
                    <div class=""container"">
                     <table border=""0"" width=""100%"" height=""10%"">
                          <tr>
                                <td width=""13%"" align=""center"" bgcolor=""dodgerblue""><font color=""white");
            WriteLiteral(@"""><b>Size</b></font></td>
                         </tr>
                    </table>
                    <br />`
                    );

                    for (var item of Object.values(data.sizes)) {

                        $(""#toppingList"").append(`<td width=""13%"" align=""center""> <input id='size${++Id}' type='radio' name='size' value=""${item.sizeName}"" /> `);
                        $(""#toppingList"").append(`<label>${item.sizeName}($${item.price})</label> </td>`);

                    }

                    $('#size1').attr('checked', 'checked');
                    $(""#toppingList"").append(`</div>`);
                    totalPrice += 6.5;
                    sizeId = 0;

                    //Crust
                     $(""#toppingList"").append(""<h2>Crust:</h2>"");
                     $(""#toppingList"").append(`
                    <div class=""container"">
                     <table border=""0"" width=""100%"" height=""10%"">
                          <tr>
                              ");
            WriteLiteral(@"  <td width=""13%"" align=""center"" bgcolor=""dodgerblue""><font color=""white""><b>Size</b></font></td>
                         </tr>
                    </table>
                    <br />`
                    );

                   
                    for (var item of Object.values(data.crusts)) {
                        $(""#toppingList"").append(`<td width=""13%"" align=""center""> <input id='crust${++Id}' type='radio' name='crust' /> </td>`);
                        $(""#toppingList"").append(`<label>${item.crustName}($${item.price})</label>`);
                    }

                    $('#crust1').attr('checked', 'checked');
                    $(""#toppingList"").append(`</div>`);
                    totalPrice += 1.5;
                    sizeId = 0;


                    //Sauce

                      $(""#toppingList"").append(""<h2>Sauce:</h2>"");
                     $(""#toppingList"").append(`
                    <div class=""container"">
                     <table border=""0"" width=""100%"" heig");
            WriteLiteral(@"ht=""10%"">
                          <tr>
                                <td width=""13%"" align=""center"" bgcolor=""dodgerblue""><font color=""white""><b>Size</b></font></td>
                         </tr>
                    </table>
                    <br />`
                    );
                
                    for (var item of Object.values(data.sauces)) {
                        $(""#toppingList"").append(""<input type='radio' name='sauce' />"");
                        $(""#toppingList"").append(`<label>${item.sauceName}($${item.price})</label>`);
                    }
                    console.log(data);


                    //Sauce Amount
                    $(""#toppingList"").append(""<h2>Sauce Amount:</h2>"");
                    for (var item of Object.values(data.sauceAmounts)) {
                        $(""#toppingList"").append(""<input type='radio' name='sauceAmount' />"");
                        $(""#toppingList"").append(`<label>${item.amount}($${item.price})</label>`);
            ");
            WriteLiteral(@"        }

                    //Cheese Amount
                    $(""#toppingList"").append(""<h2>Cheese Amount:</h2>"");
                    for (var item of Object.values(data.cheeseAmounts)) {
                        $(""#toppingList"").append(""<input type='radio' name='cheeseAmount' />"");
                        $(""#toppingList"").append(`<label>${item.amount}($${item.price})</label>`);
                    }

                    //Toppings

                    $(""#toppingList"").append(""<h2>Toppings:</h2>"");
                    for (var item of Object.values(data.toppings)) {
                        $(""#toppingList"").append(""<input type='checkbox' />"");
                        $(""#toppingList"").append(`<label>${item.toppingName}($${item.toppingPrice})</label>`);
                    }

                    //Total Price
                    $(""#toppingList"").append(`<h2>Total: ${totalPrice}</h2>`);





                },
                error: function (jqXHR, textStatus, errorThrown) {
");
            WriteLiteral(@"                    $(""#getToppingResult"").val(jqXHR.statusText);
                }
            });
        });

        $('#addPizza').click(function (e) {


            var radioValue = $(""input[name='size']:checked"").val();
            $(""#shoppingcart"").append(""<p>"" + ""Size: "" + radioValue + ""</p>"");



            console.log(radioValue);

        });

    </script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Entities.ViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
